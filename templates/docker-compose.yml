version: '3.4'
services:
  proxy:
    image: nginx:latest
    container_name: proxy
    restart: always
    volumes:
      - /home/{{host_user}}/proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /home/{{host_user}}/proxy/nginx/conf.d:/etc/nginx/conf.d
      - /home/{{host_user}}/proxy/nginx/sites-enabled:/etc/nginx/sites-enabled
      - /var/www/html:/usr/share/nginx/html
      - /var/log/nginx:/var/log/nginx
      - /home/{{host_user}}/proxy/certs/{{project}}/public.key:/etc/ssl/certs/public.key
      - /home/{{host_user}}/proxy/certs/{{project}}/private.key:/etc/ssl/private/private.key
    ports:
      - "80:80"
      - "443:443"
    networks:
      teamcity:
        ipv4_address: 192.168.176.80
  server:
    container_name: server
    image: jetbrains/teamcity-server:2023.11.4
    restart: always
    environment:
      TEAMCITY_SERVER_MEM_OPTS: "-Xmx2048m" # Limit memory usage
    ports:
      - "8111:8111"
    networks:
      teamcity:
        ipv4_address: 192.168.176.81
    volumes:
      - volume_server_data:/data/teamcity_server/datadir
      - volume_server_logs:/opt/teamcity/logs
      - /home/{{host_user}}/server-files/server.xml:/opt/teamcity/conf/server.xml
      - /home/{{host_user}}/server-files/server.database.properties:/data/teamcity_server/datadir/config/database.properties
  agent_zero:
    container_name: agent_zero
    restart: always
    build:
      context: /home/{{host_user}}/agent-files
      dockerfile: agent.zero.Dockerfile
      network: host
    networks:
      teamcity:
        ipv4_address: 192.168.176.60
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/{{host_user}}/agent-files:/home/buildagent/agent-files
    environment:
      SERVER_URL: http://server:8111
      AGENT_NAME: agent_zero
      DOCKER_IN_DOCKER: start
    privileged: true
    user: root
  agent_one:
    container_name: agent_one
    restart: always
    build:
      context: /home/{{host_user}}/agent-files
      dockerfile: agent.zero.Dockerfile
      network: host
    networks:
      teamcity:
        ipv4_address: 192.168.176.61
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/{{host_user}}/agent-files:/home/buildagent/agent-files
    environment:
      SERVER_URL: http://server:8111
      AGENT_NAME: agent_one
      DOCKER_IN_DOCKER: start
    privileged: true
    user: root
  pgadmin4:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "8089:8080"
    volumes:
      - /home/{{host_user}}/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      pgadmin:
        ipv4_address: 192.168.133.33
  strapi:
    image: elestio/strapi-${NODE_ENV}:latest
    restart: always
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - /home/{{host_user}}/strapi/config:/opt/app/config
      - /home/{{host_user}}/strapi/src:/opt/app/src
      # - /home/{{host_user}}/strapi/package.json:/opt/package.json
      # - /home/{{host_user}}/strapi/yarn.lock:/opt/yarn.lock
      - /home/{{host_user}}/strapi/.env:/opt/app/.env
      - /home/{{host_user}}/strapi/public/uploads:/opt/app/public/uploads
      - /home/{{host_user}}/strapi/entrypoint.sh:/opt/app/entrypoint.sh
    ports:
      - "9930:1337"
    networks:
      strapi:
        ipv4_address: 192.168.220.22
networks:
  teamcity:
    ipam:
      driver: default
      config:
        - subnet: "192.168.176.0/20"
  strapi:
    ipam:
      driver: default
      config:
        - subnet: "192.168.220.0/20"
  pgadmin:
    ipam:
      driver: default
      config:
        - subnet: "192.168.133.0/20"
volumes:
  volume_server_data:
    external: true
  volume_server_logs:
    external: true
  volume_agent:
    external: true
#  volume_postgresql:
#    external: true
